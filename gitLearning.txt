//第一次配置
git config --global user.email "hewhys@gmail.com"//这里要填邮箱
git config --global user.name "Hewhys"//这里要填用户名

//创建工作区
git init//在当前目录下创建工作区

//提交
git add gitLearning.txt//添加文件
git commit --message "我的git学习开始啦"

//其它功能
git status//查看状态
git diff gitLearning.txt//查看改动
git log//查看日志记录

//克隆版本库
git clone /e/工作区/gitLearing /e/工作区/gitLearing-clone //克隆指令 跟源与目标

//修改主线内容并提交
git add gitLearning.txt
git commit --message "在原有主线上修改"  //还可以用-m "在原有主线上修改"

//log参数
git log --graph
git log -3 //只显示最近三次提交，可以加在其它参数之后哦
git log --format=fuller //显示详细的信息
git log --oneline //显示概述信息
git log --stat //用来显示被修改的文件
git log --shortstat  //显示修改文件的数目、以及新增和删除的文件的数目

//使用pull指令取回修改
git pull    //不带参数就是支线从主线拿回修改
git pull /e/工作区/gitLearning-clone master//跟目标与源

//创建裸版本库
git clone --bare /e/工作区/gitLearning /e/工作区/gitLearning-clone-bare

// 通常可以用add --all来注册所有修改
git add --all

//查看当前工作区中所发生的修改
git status

//储藏
git stash
git stash pop
git stash list
git stash pop stash@{1}

//.gitignore
以斜杠“/”开头表示目录；

以星号“*”通配多个字符；

以问号“?”通配单个字符

以方括号“[]”包含单个字符的匹配列表；

以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；

//关联远程库
git remote add origin git@github.com:hewhys/helloWorld.git
git remote add origin https://github.com/hewhys/learngit.git

//取消远程库关联
git remote remove origin

//第一次推送到远程版本库
git push -u origin master

//推送新版本到github
git push origin master

//添加秘钥
ssh-keygen -t rsa -C "hewhys@gmail.com"

//查看分支
git branch

//创建分支
git branch <name>

//切换分支
git checkout <name>

//合并某分支到当前分支
git merge <name>

//删除分支
git branch -d <name>